---
description: 
globs: src/battle/**
alwaysApply: false
---
# Pokestar Battle System

This is a condensed reference for Cursor AI. For full documentation, see the [README.md](mdc:src/battle/README.md) in `src/battle/`.

## Unique Traits
- All 6 Pokemon on battlefield simultaneously, positioned in a grid
- Combat Readiness (CR) system: faster Pokemon act more frequently
- 3-tier move system: Basic, Power, Ultimate moves with cooldowns
- Custom effects for moves, abilities, and items

## Core Architecture
- `src/battle/engine/`: Battle, BattlePokemon classes and event system
- `src/battle/data/`: Moves, abilities, effects, and held items

## Key Patterns
1. Event-driven architecture with listeners that can modify event args
2. Properties pattern: Add functions return properties used by Remove functions
3. Generic helper methods for common operations

## Essential Components
1. Moves: Define type, power, targeting, cooldown, and execute behavior
2. Abilities: Register event listeners in abilityAdd, clean up in abilityRemove
3. Effects: Temporary buffs/debuffs with duration and dispellable property
4. Held Items: Passive or usable effects implemented through event listeners

## When Extending
1. Add enum entry in battleEnums.js if not already there
2. Create instance in appropriate data file
3. Implement required methods
4. Use existing methods for moves, abilities, held items, or effects when available


